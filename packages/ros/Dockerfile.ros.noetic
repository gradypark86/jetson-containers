#
# this dockerfile roughly follows the 'Installing from source' from:
#   http://wiki.ros.org/noetic/Installation/Source
#
ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ARG ROS_PACKAGE=ros_base
ENV ROS_DISTRO=noetic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_PYTHON_VERSION=3

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace


#
# add the ROS deb repo to the apt sources list
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
		cmake \
		build-essential \
		curl \
		wget \
		gnupg2 \
		lsb-release \
		ca-certificates \
    && rm -rf /var/lib/apt/lists/*

RUN sh -c 'sudo sh -c '. /etc/lsb-release && echo "deb http://mirrors.bfsu.edu.cn/ros/ubuntu/ `lsb_release -cs` main" > /etc/apt/sources.list.d/ros-latest.list''
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -


#
# install bootstrap dependencies
#
RUN rm -f /var/lib/dpkg/info/libopencv* /var/lib/dpkg/info/opencv* && apt-get purge -y libopencv* opencv* && apt --fix-broken install -y

RUN apt-get update && \
    apt-get install -y \
          ros-noetic-desktop  python3-rostopic python3-rospkg python3-rosnode python3-rosmsg python3-rosservice \
          libpython3-dev \
          python3-rosdep \
          python3-rosinstall-generator \
          python3-vcstool \
          build-essential && \
    rosdep init && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*

# /usr/bin/rosinstall_generator => No module named 'importlib.metadata'
RUN pip3 install --no-cache-dir --verbose importlib.metadata
# RUN pip3 list | grep catkin && pip3 install --no-cache-dir --verbose importlib.metadata catkin && \
#     pip3 list | grep catkin && \
#     python3 -c 'import catkin'
RUN apt-get update && apt install -y \
    ros-noetic-serial ros-noetic-gmapping ros-noetic-navigation \
    ros-noetic-uuid-msgs python3-empy ros-noetic-joy libpcap-dev \
    liborocos-bfl-dev libgflags-dev  ros-noetic-image-geometry \
    ros-noetic-camera-info-manager ros-noetic-image-transport \
    ros-noetic-image-publisher libgoogle-glog-dev libusb-1.0-0-dev \
    libeigen3-dev ros-noetic-teleop-twist-keyboard ros-noetic-map-server ros-noetic-xacro \
    ros-noetic-teb-local-planner ros-noetic-pcl-ros && pip install rospkg catkin_pkg pyserial pyyaml &&\
    rm -rf /var/lib/apt/lists/* && echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc &&\
    echo "PS1=\"\[\033[1;36;01m\]\u\[\033[00m\]\[\033[1;34;01m\]@\[\033[00m\]\[\033[1;32;01m\]\h\[\033[00m\]\[\033[34;01m\]:\[\033[00m\]\[\033[33;01m\]\w\[\033[00m\]\[\033[31;01m\] \$\[\033[37;00m\] \"" >> ~/.bashrc
    

#
# download/build the ROS source
# error: option --install-layout not recognized  https://github.com/ros/catkin/issues/863#issuecomment-1000446018
#
RUN mkdir ros_catkin_ws && \
    cd ros_catkin_ws && \
    rosinstall_generator ${ROS_PKG} vision_msgs image_transport --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-${ROS_PKG}.rosinstall && \
    mkdir src && \
    vcs import --input ${ROS_DISTRO}-${ROS_PKG}.rosinstall ./src && \
    apt-get update && \
    rosdep install -y \
	 --from-paths ./src \
	 --ignore-packages-from-source \
	 --rosdistro ${ROS_DISTRO} \
	 --skip-keys "python3-pykdl libopencv-dev libopencv-contrib-dev libopencv-imgproc-dev python-opencv python3-opencv" && \
    python3 ./src/catkin/bin/catkin_make_isolated --install --install-space ${ROS_ROOT} -DCMAKE_BUILD_TYPE=Release -DSETUPTOOLS_DEB_LAYOUT=OFF && \
    rm -rf /var/lib/apt/lists/*


# 
# commands will be appended/run by the entrypoint which sources the ROS environment
#
COPY ros_entrypoint.sh /ros_entrypoint.sh

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["/bin/bash"]

WORKDIR /
